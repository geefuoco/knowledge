// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  username String
  email String @unique
  password String
  bio String?
  avatar String?
	createdAt DateTime @default(now())
	posts Post[]
	comments Comment[]
	likes Like[]
}

model Post {
	id Int @id @default(autoincrement())
	body String
  image String?
	user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
	user_id Int
	createdAt DateTime @default(now())
	comments Comment[]
	likes Like[] 
}

model Comment {
	id Int @id @default(autoincrement())
	body String
	user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
	user_id Int
	post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
	post_id Int
	children Comment[] @relation("Comment_Children")
	parent Comment? @relation("Comment_Children", fields: [parent_id], references: [id], onDelete: Cascade)
	parent_id Int?
	createdAt DateTime @default(now())
	likes Like[] 
}

model Like {
	id Int @id @default(autoincrement())
    key String @unique
	user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
	user_id Int
	post Post?  @relation(fields: [post_id], references: [id], onDelete: Cascade , map: "like_post")
	comment Comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade, map: "like_comment")
	comment_id Int?
	post_id Int?
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}
